name: ci

concurrency:
  cancel-in-progress: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
  group: ci-${{ github.ref_name }}-${{ github.event_name }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: "0 5 * * *"
    - cron: "0 7 * * 1"
permissions:
  contents: write

env:
  NETLIFY_SITE_ID: developer-friendly
  NETLIFY_DEPLOY_TO_PROD: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  PYTHON_VERSION: 3.x
  URL_DOWNLOAD: "true"

jobs:
  preview:
    if: github.event_name == 'pull_request' && github.repository == 'developer-friendly/blog'
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        name: Install dependencies
        run: |
          pip install -U pip -r requirements.txt
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant
      - env:
          DRAFT: ${{ github.event_name == 'pull_request' }}
          GA_PROPERTY: ${{ vars.GA_PROPERTY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # git-committers plugin
        name: Build the site
        run: mkdocs build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: build-pr${{ github.event.pull_request.number }}
          path: site
      - id: netlify
        name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.2.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_DEPLOY_TO_PROD: ${{ env.NETLIFY_DEPLOY_TO_PROD }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
          build_command: echo Skipping building the web files
          build_directory: site
          install_command: echo Skipping installing the dependencies
      - name: Comment PR
        uses: meysam81/comment-pr@main
        with:
          title: "# Live preview"
          content: |
            The live preview of the changes are available at the following URL:
            <${{ env.NETLIFY_PREVIEW_URL }}>
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: |
      (
        github.event_name == 'push' && github.ref == 'refs/heads/main'
      ) || (
        github.event_name == 'schedule' && github.event.schedule == '0 5 * * *'
      )
    permissions:
      contents: read
      id-token: write
      pages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Calculate cache id
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Cache mkdocs-material
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        name: Install dependencies
        run: |
          pip install -U pip -r requirements.txt
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant
      - env:
          GA_PROPERTY: ${{ vars.GA_PROPERTY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Build the site
        run: mkdocs build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - id: deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
      - if: ${{ github.repository == 'developer-friendly/blog' }}
        id: netlify
        name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.2.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_DEPLOY_TO_PROD: ${{ env.NETLIFY_DEPLOY_TO_PROD }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
          build_command: echo Skipping building the web files
          build_directory: site
          install_command: echo Skipping installing the dependencies

  newsletter:
    if: |
      (
        github.repository == 'developer-friendly/blog' &&
        github.event_name == 'schedule' &&
        github.event.schedule == '0 7 * * 1'
      ) || (
        github.event_name == 'push' && github.ref == 'refs/heads/main'
      )
    runs-on: ubuntu-latest
    env:
      LISTMONK_AUTHORIZATION: ${{ secrets.LISTMONK_AUTHORIZATION }}
      NEWSLETTER_CAMPAIGN_LIST: ${{ vars.NEWSLETTER_CAMPAIGN_LIST }}
    defaults:
      run:
        working-directory: ./internal/rss-to-email-py
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: pip install -U pip -r ./requirements.txt
      - id: campaign
        name: Create a new campaign
        run: |
          campaign_id=$(./main.py create-campaign | jq -r .data.id)
          echo "id=$campaign_id" >> $GITHUB_OUTPUT
      - name: Start the campaign
        run: ./main.py -c ${{ steps.campaign.outputs.id }} change-campaign-status -s running

  lychee:
    if: ${{ github.repository == 'developer-friendly/blog' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: lychee
        name: Link Checker
        uses: lycheeverse/lychee-action@v1
        with:
          fail: ${{ github.ref == 'refs/heads/main' }}

  trivy:
    if: ${{ github.repository == 'developer-friendly/blog' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scan-type:
          - fs
          - config
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trivy ${{ matrix.scan-type }}
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: "1"
          scan-ref: .
          scan-type: ${{ matrix.scan-type }}
          trivy-config: trivy.yaml

  checkov:
    if: ${{ github.repository == 'developer-friendly/blog' }}
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          config_file: .checkov_config.yaml
          output_format: cli,sarif
          output_file_path: console,results.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: results.sarif
