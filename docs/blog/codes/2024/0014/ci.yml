name: ci

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

env:
  DOMAIN: localhost
  ENVIRONMENT: local
  PROJECT_NAME: github-actions-integration-testing
  STACK_NAME: full-stack-fastapi-project
  BACKEND_CORS_ORIGINS: "http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.tiangolo.com"
  SECRET_KEY: changethis
  FIRST_SUPERUSER: admin@example.com
  FIRST_SUPERUSER_PASSWORD: changethis
  USERS_OPEN_REGISTRATION: "False"
  SMTP_HOST: ""
  SMTP_USER: ""
  SMTP_PASSWORD: ""
  EMAILS_FROM_EMAIL: info@example.com
  SMTP_TLS: "True"
  SMTP_SSL: "False"
  SMTP_PORT: 587
  POSTGRES_SERVER: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: app
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: changethis
  SENTRY_DSN: ""
  DOCKER_IMAGE_BACKEND: backend
  DOCKER_IMAGE_FRONTEND: frontend

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      id-token: write
      pages: write
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -h localhost" --health-interval 10s --health-timeout 5s --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install -U pip poetry
          poetry install
      - name: Set up migration
        run: |
          poetry run alembic upgrade head
      - name: Run tests
        run: |
          poetry run coverage run --source=app -m pytest
          poetry run coverage report --show-missing
          poetry run coverage html
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: coverage-html
          path: backend/htmlcov
      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: coverage-html
